#-------------------------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See https://go.microsoft.com/fwlink/?linkid=2090316 for license information.
#-------------------------------------------------------------------------------------------------------------

version: '3'
services:
  docker-in-docker:
    # You may want to add a non-root user to your Dockerfile and uncomment the line below
    # to cause all processes to run as this user. However, if you just want VS Code and
    # its sub-processes (terminals, tasks, debugging) to execute as the user, you can 
    # the "remoteUser" property in devcontainer.json instead. On Linux, you may need to 
    # ensure the UID and GID of the container user you create matches your local user. 
    # See https://aka.ms/vscode-remote/containers/non-root for details.
    # user: vscode

    build: 
      context: .
      dockerfile: Dockerfile
      args:
        USER_UID: 1000
        USER_GID: 1000

    volumes:
      # Update this to wherever you want VS Code to mount the folder of your project
      - ..:/workspace:cached

      # Forwards the local Docker socket to the container.
      - /var/run/docker.sock:/var/run/docker.sock 

    # Uncomment the next four lines if you will use a ptrace-based debuggers like C++, Go, and Rust.
    # cap_add:
    #  - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined

    # Overrides default command to verify that vscode user can access docker socket 
    # and that things don't shut down after the process ends.
    command: /bin/bash -c /usr/local/bin/check-docker-group && sleep infinity 
